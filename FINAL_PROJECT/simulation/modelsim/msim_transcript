# Reading C:/intelFPGA_lite/18.1/modelsim_ase/tcl/vsim/pref.tcl
# do Number_reco_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying C:/intelFPGA_lite/18.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -sv -work work +incdir+C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/nn {C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/nn/multiplier.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 16:07:48 on May 05,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/nn" C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/nn/multiplier.sv 
# -- Compiling module multiplier
# 
# Top level modules:
# 	multiplier
# End time: 16:07:48 on May 05,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -sv -work work +incdir+C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/testbench {C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/testbench/nntestbench.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 16:07:48 on May 05,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/testbench" C:/intelFPGA_lite/18.1/ECE385/FINAL_PROJECT/testbench/nntestbench.sv 
# -- Compiling module nntestbench
# 
# Top level modules:
# 	nntestbench
# End time: 16:07:49 on May 05,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  nntestbench
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" nntestbench 
# Start time: 16:07:49 on May 05,2020
# Loading sv_std.std
# Loading work.nntestbench
# Loading work.multiplier
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run 1000 ns
