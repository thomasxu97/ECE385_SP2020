module ResizerFile(
    input logic Clk, Reset,
    input logic [12:0] x_cont, y_cont,
    input logic [7:0] ipixel,
    output logic opixel,
    output logic [7:0] oX_pos, oY_pos
);
parameter threshold = 127;
logic pxl_flag_1;
logic pxl_flag_2;
logic pxl_flag_3;
logic pxl_flag_4;
logic pxl_flag_5;
logic pxl_flag_6;
logic pxl_flag_7;
logic pxl_flag_8;
logic pxl_flag_9;
logic pxl_flag_10;
logic pxl_flag_11;
logic pxl_flag_12;
logic pxl_flag_13;
logic pxl_flag_14;
logic pxl_flag_15;
logic pxl_flag_16;
logic pxl_flag_17;
logic pxl_flag_18;
logic pxl_flag_19;
logic pxl_flag_20;
logic pxl_flag_21;
logic pxl_flag_22;
logic pxl_flag_23;
logic pxl_flag_24;
logic pxl_flag_25;
logic pxl_flag_26;
logic pxl_flag_27;
logic pxl_flag_28;
logic opixel_1;
logic opixel_2;
logic opixel_3;
logic opixel_4;
logic opixel_5;
logic opixel_6;
logic opixel_7;
logic opixel_8;
logic opixel_9;
logic opixel_10;
logic opixel_11;
logic opixel_12;
logic opixel_13;
logic opixel_14;
logic opixel_15;
logic opixel_16;
logic opixel_17;
logic opixel_18;
logic opixel_19;
logic opixel_20;
logic opixel_21;
logic opixel_22;
logic opixel_23;
logic opixel_24;
logic opixel_25;
logic opixel_26;
logic opixel_27;
logic opixel_28;
AvgResizer #(.XSTART(0), .XEND(9), .thed(threshold))(.*,.opixel(opixel_1), .oflag(pxl_flag_1));
AvgResizer #(.XSTART(10), .XEND(19), .thed(threshold))(.*,.opixel(opixel_2), .oflag(pxl_flag_2));
AvgResizer #(.XSTART(20), .XEND(29), .thed(threshold))(.*,.opixel(opixel_3), .oflag(pxl_flag_3));
AvgResizer #(.XSTART(30), .XEND(39), .thed(threshold))(.*,.opixel(opixel_4), .oflag(pxl_flag_4));
AvgResizer #(.XSTART(40), .XEND(49), .thed(threshold))(.*,.opixel(opixel_5), .oflag(pxl_flag_5));
AvgResizer #(.XSTART(50), .XEND(59), .thed(threshold))(.*,.opixel(opixel_6), .oflag(pxl_flag_6));
AvgResizer #(.XSTART(60), .XEND(69), .thed(threshold))(.*,.opixel(opixel_7), .oflag(pxl_flag_7));
AvgResizer #(.XSTART(70), .XEND(79), .thed(threshold))(.*,.opixel(opixel_8), .oflag(pxl_flag_8));
AvgResizer #(.XSTART(80), .XEND(89), .thed(threshold))(.*,.opixel(opixel_9), .oflag(pxl_flag_9));
AvgResizer #(.XSTART(90), .XEND(99), .thed(threshold))(.*,.opixel(opixel_10), .oflag(pxl_flag_10));
AvgResizer #(.XSTART(100), .XEND(109), .thed(threshold))(.*,.opixel(opixel_11), .oflag(pxl_flag_11));
AvgResizer #(.XSTART(110), .XEND(119), .thed(threshold))(.*,.opixel(opixel_12), .oflag(pxl_flag_12));
AvgResizer #(.XSTART(120), .XEND(129), .thed(threshold))(.*,.opixel(opixel_13), .oflag(pxl_flag_13));
AvgResizer #(.XSTART(130), .XEND(139), .thed(threshold))(.*,.opixel(opixel_14), .oflag(pxl_flag_14));
AvgResizer #(.XSTART(140), .XEND(149), .thed(threshold))(.*,.opixel(opixel_15), .oflag(pxl_flag_15));
AvgResizer #(.XSTART(150), .XEND(159), .thed(threshold))(.*,.opixel(opixel_16), .oflag(pxl_flag_16));
AvgResizer #(.XSTART(160), .XEND(169), .thed(threshold))(.*,.opixel(opixel_17), .oflag(pxl_flag_17));
AvgResizer #(.XSTART(170), .XEND(179), .thed(threshold))(.*,.opixel(opixel_18), .oflag(pxl_flag_18));
AvgResizer #(.XSTART(180), .XEND(189), .thed(threshold))(.*,.opixel(opixel_19), .oflag(pxl_flag_19));
AvgResizer #(.XSTART(190), .XEND(199), .thed(threshold))(.*,.opixel(opixel_20), .oflag(pxl_flag_20));
AvgResizer #(.XSTART(200), .XEND(209), .thed(threshold))(.*,.opixel(opixel_21), .oflag(pxl_flag_21));
AvgResizer #(.XSTART(210), .XEND(219), .thed(threshold))(.*,.opixel(opixel_22), .oflag(pxl_flag_22));
AvgResizer #(.XSTART(220), .XEND(229), .thed(threshold))(.*,.opixel(opixel_23), .oflag(pxl_flag_23));
AvgResizer #(.XSTART(230), .XEND(239), .thed(threshold))(.*,.opixel(opixel_24), .oflag(pxl_flag_24));
AvgResizer #(.XSTART(240), .XEND(249), .thed(threshold))(.*,.opixel(opixel_25), .oflag(pxl_flag_25));
AvgResizer #(.XSTART(250), .XEND(259), .thed(threshold))(.*,.opixel(opixel_26), .oflag(pxl_flag_26));
AvgResizer #(.XSTART(260), .XEND(269), .thed(threshold))(.*,.opixel(opixel_27), .oflag(pxl_flag_27));
AvgResizer #(.XSTART(270), .XEND(279), .thed(threshold))(.*,.opixel(opixel_28), .oflag(pxl_flag_28));

assign oX_pos = x_cont/10;
assign oY_pos = y_cont/10;
always_comb begin 
    opixel = 1'bz;
    if (pxl_flag_1) opixel = opixel_1;
    else if (pxl_flag_2) opixel = opixel_2;
    else if (pxl_flag_3) opixel = opixel_3;
    else if (pxl_flag_4) opixel = opixel_4;
    else if (pxl_flag_5) opixel = opixel_5;
    else if (pxl_flag_6) opixel = opixel_6;
    else if (pxl_flag_7) opixel = opixel_7;
    else if (pxl_flag_8) opixel = opixel_8;
    else if (pxl_flag_9) opixel = opixel_9;
    else if (pxl_flag_10) opixel = opixel_10;
    else if (pxl_flag_11) opixel = opixel_11;
    else if (pxl_flag_12) opixel = opixel_12;
    else if (pxl_flag_13) opixel = opixel_13;
    else if (pxl_flag_14) opixel = opixel_14;
    else if (pxl_flag_15) opixel = opixel_15;
    else if (pxl_flag_16) opixel = opixel_16;
    else if (pxl_flag_17) opixel = opixel_17;
    else if (pxl_flag_18) opixel = opixel_18;
    else if (pxl_flag_19) opixel = opixel_19;
    else if (pxl_flag_20) opixel = opixel_20;
    else if (pxl_flag_21) opixel = opixel_21;
    else if (pxl_flag_22) opixel = opixel_22;
    else if (pxl_flag_23) opixel = opixel_23;
    else if (pxl_flag_24) opixel = opixel_24;
    else if (pxl_flag_25) opixel = opixel_25;
    else if (pxl_flag_26) opixel = opixel_26;
    else if (pxl_flag_27) opixel = opixel_27;
    else if (pxl_flag_28) opixel = opixel_28;
end
endmodule 
